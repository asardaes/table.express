% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VERBS-joins.R, R/VERBS-anti_join.R,
%   R/VERBS-inner_join.R, R/VERBS-left_join.R, R/VERBS-mutate_join.R,
%   R/VERBS-right_join.R, R/VERBS-semi_join.R
\name{joins}
\alias{joins}
\alias{joins-table.express}
\alias{anti_join.ExprBuilder}
\alias{inner_join.ExprBuilder}
\alias{left_join.ExprBuilder}
\alias{mutate_join.ExprBuilder}
\alias{right_join.ExprBuilder}
\alias{semi_join.ExprBuilder}
\title{Joining verbs}
\usage{
\method{anti_join}{ExprBuilder}(x, y, ...)

\method{inner_join}{ExprBuilder}(x, y, ...)

\method{left_join}{ExprBuilder}(x, y, ..., nomatch, mult, roll, rollends)

\method{mutate_join}{ExprBuilder}(x, y, ..., .SDcols, mult, roll, rollends)

\method{right_join}{ExprBuilder}(x, y, ..., nomatch, mult, roll, rollends)

\method{semi_join}{ExprBuilder}(x, y, ...)
}
\arguments{
\item{x}{An \link{ExprBuilder} instance.}

\item{y}{A \link[data.table:data.table-class]{data.table::data.table}.}

\item{...}{Expressions for the \code{on} part of the join.}

\item{nomatch}{See \link[data.table:data.table]{data.table::data.table}.}

\item{mult}{See \link[data.table:data.table]{data.table::data.table}.}

\item{roll}{See \link[data.table:data.table]{data.table::data.table}.}

\item{rollends}{See \link[data.table:data.table]{data.table::data.table}.}

\item{.SDcols}{For \code{mutate_join}. See the details below.}
}
\description{
See also \link[dplyr:join]{dplyr::join}.
}
\details{
The \link{ExprBuilder} method for \code{mutate_join} implements the idiom described in
\href{https://stackoverflow.com/a/54313203/5793905}{this link}. The columns specified in \code{.SDcols} are
those that will be added to \code{x} from \code{y}. If the character vector in \code{.SDcols} is named, the
names are taken as the new column names for the values added to \code{x}. On the other hand, \code{.SDcols}
can be specified using \link[tidyselect:select_helpers]{tidyselect::select_helpers}.

The \code{semi_join} method starts a new \link[=chain]{chain} immediately.
}
\examples{

lhs <- data.table::data.table(x = rep(c("b", "a", "c"), each = 3),
                              y = c(1, 3, 6),
                              v = 1:9)

rhs <- data.table::data.table(x = c("c", "b"),
                              v = 8:7,
                              foo = c(4, 2))


rhs \%>\%
    start_expr \%>\%
    right_join(lhs, x, v) \%>\%
    end_expr


lhs \%>\%
    start_expr \%>\%
    inner_join(rhs, x) \%>\%
    end_expr


# creates new data.table
lhs \%>\%
    start_expr \%>\%
    left_join(rhs, x) \%>\%
    end_expr


# would modify lhs by reference
lhs \%>\%
    start_expr \%>\%
    mutate_join(rhs, x, .SDcols = c("foo", rhs.v = "v"))


# creates new data.table
lhs \%>\%
    start_expr \%>\%
    right_join(rhs, x) \%>\%
    end_expr


# keep only columns from rhs
rhs \%>\%
    start_expr \%>\%
    semi_join(lhs, x) \%>\%
    end_expr

}
