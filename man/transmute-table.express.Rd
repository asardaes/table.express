% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VERBS-transmute.R
\name{transmute-table.express}
\alias{transmute-table.express}
\alias{transmute.ExprBuilder}
\title{Alias for select}
\usage{
\method{transmute}{ExprBuilder}(.data, ..., with = TRUE, .chain = TRUE)
}
\arguments{
\item{.data}{An instance of \link{ExprBuilder}.}

\item{...}{Clause for selectin/computing on columns. The \code{j} inside the \code{data.table}'s frame.}

\item{with}{Passed to \link[data.table:data.table-class]{data.table::data.table}'s \code{\link[data.table:data.table-package]{[}}
method.}

\item{.chain}{Logical. Should a new frame be automatically chained to the expression if the
clause being set already exists?}
}
\description{
Because of the way \code{data.table} and the \link{select-table.express} method work, a
\code{\link[dplyr:transmute]{dplyr::transmute()}} equivalent can be specified as a \code{select} clause.
}
\details{
If \code{length(...) == 1L} and the expression is a call to \code{:} (e.g. a:c), then it will be taken as
the single expression for the select clause, otherwise everything therein \code{...} will be wrapped
in a call to:
\itemize{
\item \code{\link[base:list]{base::list()}} if \code{with = TRUE}
\item \code{\link[base:c]{base::c()}} otherwise
}
}
